package View;/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import Controller.LoginController;
import Model.ConnexionDB;
import Model.LoginModel;
import Model.Utilisateur;

import java.awt.*;

import Model.ConnexionDB;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author waila
 */
public class HumanResourceView extends javax.swing.JFrame {
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private LoginModel loginModel;
    private LoginView loginView;
    private LoginController c;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;

    /**
     * Creates new form HomeInter
     */
    public HumanResourceView() {
        initComponents();
        setLocationRelativeTo(null);
        loadData();
        jPanel1.setBorder(BorderFactory.createLineBorder(Color.BLACK, 2));

        // Ajouter une bordure à votre panneau de tableau (jPanel2)
        jPanel2.setBorder(BorderFactory.createLineBorder(Color.BLACK, 2));

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void loadData(){
        try (Connection connection = ConnexionDB.getConnection()) {
            DefaultTableModel tableModel = (DefaultTableModel) jTable1.getModel();
            tableModel.setRowCount(0);
            String query = "SELECT e.nom, e.prenom, e.adresse, e.telephone, " +
                    "e.email, e.date_naissance, e.statut, e.poste " +
                    "FROM employe e";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query);
                 ResultSet resultSet = preparedStatement.executeQuery()) {
                while (resultSet.next()) {
                    Object[] row = new Object[8]; // Adjust the array size based on the number of columns
                    row[0] = resultSet.getString("nom");
                    row[1] = resultSet.getString("prenom");
                    row[2] = resultSet.getString("adresse");
                    row[3] = resultSet.getString("telephone");
                    row[4] = resultSet.getString("email");
                    row[5] = resultSet.getString("date_naissance");
                    row[6] = resultSet.getString("statut");
                    row[7] = resultSet.getString("poste");
                    // Add more rows for additional columns
                    tableModel.addRow(row);
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    private void customizeButton(javax.swing.JButton button, Color bgColor) {
        button.setBackground(bgColor);
        button.setForeground(Color.BLACK); // Optional: Set text color to white for better visibility
    }
    private void customizeButton2(JButton button, String text, Color bgColor) {
        // Set button text with HTML formatting for bold and font size
        button.setText("<html><b><p style='font-size: 16px; color: black;'>" + text + "</p></b></html>");

        // Set button background color
        button.setBackground(bgColor);

        // Set button text color to white
        button.setForeground(Color.WHITE);

        // Set button font style
        button.setFont(new Font("Segoe UI", Font.BOLD, 16));  // Ensure correct font name
    }


    private void customizeButton(JButton button, String text, String imagePath) {
        button.setText("<html><b><p style='font-size: 16px;'>" + text + "</p></b></html>");
        button.setForeground(Color.WHITE);
        button.setFont(new Font("Sogoe UI", Font.BOLD, 16));

        // If an image path is provided, set the button icon
        if (imagePath != null && !imagePath.isEmpty()) {
            button.setIcon(new ImageIcon(imagePath));
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        //jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(144, 238, 144));
        customizeButton(jButton1, Color.BLUE);
        customizeButton(jButton2,  Color.MAGENTA);
        customizeButton(jButton3, Color.RED);
        customizeButton(jButton4, Color.ORANGE);
        customizeButton(jButton5, Color.PINK);
        customizeButton(jButton6, Color.CYAN);
        //customizeButton(jButton7, Color.MAGENTA);
        customizeButton(jButton8, Color.DARK_GRAY);
        customizeButton2(jButton1, "  Departement && Post", Color.BLUE);
        customizeButton2(jButton2, "Employés", Color.MAGENTA);
        customizeButton2(jButton3, " Avantages Sociaux", Color.RED);
        customizeButton2(jButton4, "Salaire Employés", Color.ORANGE);
        customizeButton2(jButton5, "Statistic and Performance", Color.PINK);
        customizeButton2(jButton6, "Congé System", Color.CYAN);
        customizeButton2(jButton8, "Logout", Color.RED);
        jButton1.setText("  Departement && Poste");

        jButton2.setText("View Employés");
        jButton2.setForeground(Color.BLACK);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                loadData();
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText(" Avantages Sociaux");
        jButton3.setForeground(Color.BLACK);

        jButton4.setText("Salaire Employe");
        jButton4.setForeground(Color.BLACK);

        jButton5.setText("Performance & Rapport");
        jButton5.setForeground(Color.BLACK);
        jButton5.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }

            private void jButton5ActionPerformed(ActionEvent evt) {
                // Créez une instance de PerformanceRapportView
                PerformanceRapportView performanceRapportView = new PerformanceRapportView();
                // Rendre l'instance visible
                performanceRapportView.setVisible(true);
            }
        });


        jButton6.setText("Congé System");
        jButton6.setForeground(Color.BLACK);
        jButton6.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Code à exécuter lorsque le bouton "Congé System" est cliqué
                GestionConge gestionCongeWindow = new GestionConge();
                gestionCongeWindow.setVisible(true);
            }
        });


        jButton8.setText("Logout");
        jButton8.setForeground(Color.BLACK);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                // Appel de la méthode pour gérer l'événement du bouton Logout
                jButton8ActionPerformed(evt);
            }

            private void jButton8ActionPerformed(ActionEvent evt) {
                int confirmation = javax.swing.JOptionPane.showConfirmDialog(HumanResourceView.this, "Êtes-vous sûr de vouloir vous déconnecter?", "Confirmation", javax.swing.JOptionPane.YES_NO_OPTION);

                if (confirmation == javax.swing.JOptionPane.YES_OPTION) {
                    LoginModel loginModel = new LoginModel();//calling the login model
                    LoginController loginController = new LoginController(loginModel);
                    LoginView loginView = new LoginView(loginModel,loginController);
                    // Fermer la fenêtre actuelle (HumanResourceView)
                    dispose();
                    // Afficher la fenêtre de connexion (LoginView)
                    loginView.setVisible(true);
                }
            }
        });
        JLabel adminImage = new JLabel(new ImageIcon("src/images/admin.png"));
        adminImage.setBounds(50, 30, 70, 60);
        adminImage.setBorder(BorderFactory.createLineBorder(Color.GRAY, 2, true));
        jPanel1.add(adminImage);

        // Adjust the layout manager to arrange buttons horizontally
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        customizeButton(jButton10, Color.RED);      // Couleur rouge pour Ajouter
        customizeButton(jButton9, Color.MAGENTA);    // Couleur verte pour Modifier
        customizeButton(jButton11, Color.BLUE);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap(37, Short.MAX_VALUE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                        "Nom", "Prenom", "Adresse", "Numero", "Email", "Date de Naissance", "Statuts", "Poste"
                }
        ) {
            Class[] types = new Class [] {
                    java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jButton9.setText("UPDATE");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }

            private void jButton1ActionPerformed(ActionEvent evt) {
                new DepartmentPostView().setVisible(true);
            }
        });

        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton10.setText("CREATE");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("DELETE");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(144, 238, 144));
        jPanel2.setLayout(new BoxLayout(jPanel2, BoxLayout.PAGE_AXIS)); // Utiliser Bo
        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1053, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        )
                                )
                                .addContainerGap()
                        )
        );

        jButton10.setPreferredSize(new java.awt.Dimension(140, 60));
        jButton9.setPreferredSize(new java.awt.Dimension(140, 60));
        jButton11.setPreferredSize(new java.awt.Dimension(140, 60));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2)
                                .addContainerGap()
                        )
        );
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jScrollPane2.setPreferredSize(new Dimension(1000, 400));
        jPanel2.setLayout(new BoxLayout(jPanel2, BoxLayout.PAGE_AXIS));
        jPanel2.add(jScrollPane2);
        jPanel2.add(jButton10);
        jPanel2.add(jButton9);
        jPanel2.add(jButton11);
        jPanel1.setBackground(new Color(173, 216, 230)); // LightBlue
        jPanel2.setBackground(new Color(173, 216, 230)); // LightBlue


        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(ActionEvent evt) {

        //GEN-FIRST:event_jButton2ActionPerformed

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton9ActionPerformed(ActionEvent evt) {
        // Récupérez les informations de la ligne sélectionnée dans votre JTable
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow != -1) {
            String nom = jTable1.getValueAt(selectedRow, 0).toString();
            String prenom = jTable1.getValueAt(selectedRow, 1).toString();
            String adresse = jTable1.getValueAt(selectedRow, 2).toString();
            String num = jTable1.getValueAt(selectedRow, 3).toString();
            String email = jTable1.getValueAt(selectedRow, 4).toString();
            String daten = jTable1.getValueAt(selectedRow, 5).toString();
            String statut = jTable1.getValueAt(selectedRow, 6).toString();
            String poste = jTable1.getValueAt(selectedRow, 7).toString();

            // Créez une instance de EmployeeModifier avec les informations récupérées
            EmployeeModifier employeeModifier = new EmployeeModifier(this,  nom, prenom, adresse, num, email, daten, statut, poste);

            // Rendre la fenêtre EmployeeModifier visible
            employeeModifier.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner un employé à modifier.");
        }
    }

    private void jButton11ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        deleteSelectedEmployee();
    }

    private void jButton10ActionPerformed(ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:

        SwingUtilities.invokeLater(() -> {
            AddEmp addEmpForm = new AddEmp(HumanResourceView.this); // Passer l'instance de HumanResourceView
            addEmpForm.setVisible(true);
        });
        loadData();
    }//GEN-LAST:event_jButton10ActionPerformed
    private void modifySelectedEmployee() {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            try {
                String idEmploye = getIdOfSelectedEmployee();
                String nom = (String) jTable1.getValueAt(selectedRow, 0);
                String prenom = (String) jTable1.getValueAt(selectedRow, 1);
                String adresse = (String) jTable1.getValueAt(selectedRow, 2);
                String num = (String) jTable1.getValueAt(selectedRow, 3);
                String email = (String) jTable1.getValueAt(selectedRow, 4);
                String daten = (String) jTable1.getValueAt(selectedRow, 5);
                String nbrheuretrv = (String) jTable1.getValueAt(selectedRow, 6);
                String poste = (String) jTable1.getValueAt(selectedRow, 7);
                // Créer et afficher la fenêtre de modification
                EmployeeModifier modifier = new EmployeeModifier(this, nom, prenom, adresse, num, email, daten, nbrheuretrv, poste);
                modifier.setVisible(true);
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Erreur lors de la modification de l'employé.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner une ligne à modifier.");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HumanResourceView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HumanResourceView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HumanResourceView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HumanResourceView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HumanResourceView().setVisible(true);
            }
        });
    }
    private void customizeButton(JButton button, String text, Color bgColor) {
        button.setText("<html><b><p style='font-size: 16px;'>" + text + "</p></b></html>");
        button.setBackground(bgColor);
        button.setForeground(Color.BLACK);
        button.setFont(new Font("Sogoe UI", Font.BOLD, 16));
    }
    private String getIdOfSelectedEmployee() {
        int selectedRow = jTable1.getSelectedRow();
        // Supposons que la colonne 0 contient l'ID de l'employé
        return jTable1.getValueAt(selectedRow, 0).toString();
    }
    private static HumanResourceView instance;

    public static HumanResourceView getInstance() {
        if (instance == null) {
            instance = new HumanResourceView();
        }
        return instance;
    }
    private void updateEmployeeInDatabase(String telephone, String nom, String prenom, String adresse, String num, String email, String daten, String poste) {
        try (Connection connection = ConnexionDB.getConnection()) {
            String query = "UPDATE employe SET nom=?, prenom=?, adresse=?, telephone=?, email=?, date_naissance=?, statut=?, poste=? WHERE telephone=?";
            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setString(1, nom);
                preparedStatement.setString(2, prenom);
                preparedStatement.setString(3, adresse);
                preparedStatement.setString(4, num);
                preparedStatement.setString(5, email);
                preparedStatement.setString(6, daten);
                preparedStatement.setString(7, poste);
                preparedStatement.setString(8, telephone); // Utilisez la colonne unique comme identifiant
                int rowsAffected = preparedStatement.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Employé mis à jour avec succès.");
                    loadData();
                } else {
                    JOptionPane.showMessageDialog(this, "La mise à jour de l'employé a échoué.");
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    private void deleteSelectedEmployee() {
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            try {
                String telephone = jTable1.getValueAt(selectedRow, 3).toString(); // Utilisez la colonne unique comme identifiant
                // Confirmer la suppression avec une boîte de dialogue
                int confirmation = JOptionPane.showConfirmDialog(this,
                        "Êtes-vous sûr de vouloir supprimer cet employé ?", "Confirmation de suppression", JOptionPane.YES_NO_OPTION);
                if (confirmation == JOptionPane.YES_OPTION) {
                    deleteEmployeeFromDatabase(telephone);
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Erreur lors de la suppression de l'employé.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner une ligne à supprimer.");
        }
    }
    private void deleteEmployeeFromDatabase(String telephone) {
        try (Connection connection = ConnexionDB.getConnection()) {
            String congeQuery = "DELETE FROM conge WHERE id_employe IN (SELECT id_employe FROM employe WHERE telephone=?)";
            try (PreparedStatement congeStatement = connection.prepareStatement(congeQuery)) {
                congeStatement.setString(1, telephone);
                congeStatement.executeUpdate();
            }
            String performanceQuery = "DELETE FROM performance WHERE employee_id IN (SELECT id_employe FROM employe WHERE telephone=?)";
            try (PreparedStatement performanceStatement = connection.prepareStatement(performanceQuery)) {
                performanceStatement.setString(1, telephone);
                performanceStatement.executeUpdate();
            }
            String rapportQuery = "DELETE FROM rapport WHERE employee_id IN (SELECT id_employe FROM employe WHERE telephone=?)";
            try (PreparedStatement rapportStatement = connection.prepareStatement(rapportQuery)) {
                rapportStatement.setString(1, telephone);
                rapportStatement.executeUpdate();
            }

            String query = "DELETE FROM employe WHERE telephone=?";

            try (PreparedStatement preparedStatement = connection.prepareStatement(query)) {
                preparedStatement.setString(1, telephone);
                int rowsAffected = preparedStatement.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Employé supprimé avec succès.");
                    loadData(); // Recharger les données après la suppression
                } else {
                    JOptionPane.showMessageDialog(this, "La suppression de l'employé a échoué.");
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    // End of variables declaration//GEN-END:variables
}
